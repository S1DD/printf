.TH _PRINTF 3 "July 2024" "0x11. C - printf" "Custom Printf Function"
.SH NAME
_printf \- custom implementation of the printf function
.SH SYNOPSIS
.B #include "main.h"
.sp
.B int _printf(const char *format, ...);
.SH DESCRIPTION
The
.B _printf
function produces output according to a format, similarly to the standard C library function
.B printf.
The format string is composed of zero or more directives. It handles the following conversion specifiers:
.TP
.B c
Prints a single character.
.TP
.B s
Prints a string of characters.
.TP
.B %
Prints a percent sign.
.TP
.B d, i
Prints a signed decimal integer.
.TP
.B u
Prints an unsigned decimal integer.
.TP
.B o
Prints an unsigned octal integer.
.TP
.B x, X
Prints an unsigned hexadecimal integer (lowercase x or uppercase X).
.TP
.B b
Prints the binary representation of an unsigned integer.
.TP
.B p
Prints a pointer address.
.TP
.B S
Prints a string with non-printable characters represented as \x followed by their ASCII code value in hexadecimal.
.TP
.B r
Prints a reversed string.
.TP
.B R
Prints a string encoded in ROT13.
.SH OPTIONS
The following options are not yet supported:
.TP
Field width, precision, and length modifiers.
.TP
Flag characters such as +, space, #, 0, and -.
.SH EXAMPLES
.B #include "main.h"
.sp
.B int main(void)
{
.br
    _printf("Character: %c\n", 'H');
.br
    _printf("String: %s\n", "Hello, world!");
.br
    _printf("Percent: %%\n");
.br
    _printf("Decimal: %d\n", 123);
.br
    _printf("Unsigned: %u\n", 123);
.br
    _printf("Octal: %o\n", 123);
.br
    _printf("Hexadecimal: %x\n", 123);
.br
    _printf("Binary: %b\n", 123);
.br
    _printf("Pointer: %p\n", (void *)123);
.br
    _printf("Reversed: %r\n", "Hello, world!");
.br
    _printf("ROT13: %R\n", "Hello, world!");
.br
    return (0);
.br
}
.SH SEE ALSO
.BR printf (3).
.SH AUTHOR
Written by Thabiso Molefe and Elisha Oigara as part of the 0x11. C - printf project 
